@model BeEntity.BeUser

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-body" id="container" style="width:unset">
    <div class="panel-heading" style="text-align:center">
        <br />
        <h4 class="fa fa-edit"><strong> Editar Usuario </strong></h4>
    </div>
    <hr />
    <div class="container body-content">

        <div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>BeAusencias</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.RangoID)
                @Html.HiddenFor(model => model.InstitucionID)
                @Html.HiddenFor(model => model.BrigadaID)
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.NombreCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NombreCompleto, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NombreCompleto, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Rango, htmlAttributes: new { @readonly = "readonly", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Rango, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Rango, "", new { @readonly = "readonly", @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Brigada, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Brigada, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Brigada, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Institucion, htmlAttributes: new { @readonly = "readonly", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Institucion, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Institucion, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.PerfilID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PerfilID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PerfilID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EstatusID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EstatusID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EstatusID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            }


        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

