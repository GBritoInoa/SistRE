@model BeEntity.BeReporteNovedades
@{
    ViewBag.Title = "Reporte Novedades por Tipo Novedad y Rango de Fecha";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>

    .centrado {
        text-align: center;
    }
</style>



<div class="panel panel-body" id="container" style="width:unset">
    <div class="panel-heading" style="text-align:center">
        <br />
        <h4 class="fas fa-pen-alt"><strong> Reporte de Estadísticas del ERD en formato Excel </strong></h4>
    </div>
    <hr />
    <div class="container body-content">



        @using (Html.BeginForm())
        {


            @Html.AntiForgeryToken()

            <div class="form-horizontal" style="align-content:center">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoNovedadID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TipoNovedadID", null, "---Seleccione Tipo Novedad---", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoNovedadID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="input-group" style=" align-content:center">
                    <div class="input-group">
                        @*@Html.LabelFor(model => model.FechaNovedad, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label>Fecha Desde</label><label class="bg-label">*</label>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.FechaDesde, new { htmlAttributes = new { @class = " ", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.FechaDesde, " ", new { @class = "text-danger" })
                        </div>

                        @*@Html.LabelFor(model => model.FechaNovedad, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label>Fecha Hasta</label><label class="bg-label">*</label>
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.FechaHasta, new { htmlAttributes = new { @class = " ", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.FechaHasta, " ", new { @class = "text-danger" })
                        </div>
                        <br />


                        @*<div class="col-xs-12">
                                <div style="width:200px;margin: 0 auto;">
                                    <button type="button" class="btn btn-primary not-print" id="ExportarExcel", name="ExportarExcel"><span class="glyphicon glyphicon-search"></span> Descargar Archivo</button>
                                     <button type="button" class="btn btn-primary not-print" onclick="window.print();"><span class="glyphicon glyphicon-print"></span> Imprimir</button>
                                  </div>
                            </div>*@
                        <div class="col-md-3">
                            @Html.Partial("OptionsBox/Consultar")

                        </div>
                    </div>
                </div>
                <br />
                <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

                <div class="form-group" id="piechartd501" style="border: 0px solid #ccc"></div>
            </div>


        }

    </div>


</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(function () {
            $(".datepicker").datepicker();


        });

    </script>
}


<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
    // Load google charts

    google.charts.load('current', { 'packages': ['corechart'] });
    google.charts.setOnLoadCallback(drawChart);

    // Draw the chart and set the chart values
    function drawChart() {
        var data = google.visualization.arrayToDataTable([
            ['Estadísticas', 'Cantidad'],
            @Html.Raw(ViewBag.Novedades)
        ]);


                    // Optional; add a title and set the width and height of the chart
                    var options = { 'title': 'Estadísticas por Provincia', 'width': 1000, 'height': 390 };

                // Display the chart inside the <div> element with id="piechart"
                var chart = new google.visualization.PieChart(document.getElementById('piechartd501'));
                chart.draw(data, options);

        }
</script>



