//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLogic
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Context_SistRE : DbContext
    {
        public Context_SistRE()
            : base("name=Context_SistRE")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Auditoria> Auditoria { get; set; }
        public virtual DbSet<Ausencias> Ausencias { get; set; }
        public virtual DbSet<CausaFallecimiento> CausaFallecimiento { get; set; }
        public virtual DbSet<CausaHerido> CausaHerido { get; set; }
        public virtual DbSet<CausaHospitalizacion> CausaHospitalizacion { get; set; }
        public virtual DbSet<CausaMuerte> CausaMuerte { get; set; }
        public virtual DbSet<CausaRepatriacion> CausaRepatriacion { get; set; }
        public virtual DbSet<CausaSuicidio> CausaSuicidio { get; set; }
        public virtual DbSet<Entrega> Entrega { get; set; }
        public virtual DbSet<Estatus> Estatus { get; set; }
        public virtual DbSet<HistoricoNovedades> HistoricoNovedades { get; set; }
        public virtual DbSet<Institucion> Institucion { get; set; }
        public virtual DbSet<LugarActividad> LugarActividad { get; set; }
        public virtual DbSet<Nacionalidad> Nacionalidad { get; set; }
        public virtual DbSet<NovedadApresamiento> NovedadApresamiento { get; set; }
        public virtual DbSet<NovedadAusencia> NovedadAusencia { get; set; }
        public virtual DbSet<NovedadDecomiso> NovedadDecomiso { get; set; }
        public virtual DbSet<NovedadPerdidaDocumento> NovedadPerdidaDocumento { get; set; }
        public virtual DbSet<NovedadRepatriaciones> NovedadRepatriaciones { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<ProtestaConvocatoria> ProtestaConvocatoria { get; set; }
        public virtual DbSet<Sexo> Sexo { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TipoActividad> TipoActividad { get; set; }
        public virtual DbSet<TipoArma> TipoArma { get; set; }
        public virtual DbSet<TipoDecomiso> TipoDecomiso { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumento { get; set; }
        public virtual DbSet<TipoDroga> TipoDroga { get; set; }
        public virtual DbSet<TipoMedicamento> TipoMedicamento { get; set; }
        public virtual DbSet<TipoNovedad> TipoNovedad { get; set; }
        public virtual DbSet<TipoProducto> TipoProducto { get; set; }
        public virtual DbSet<TipoProtesta> TipoProtesta { get; set; }
        public virtual DbSet<TipoRecuperacion> TipoRecuperacion { get; set; }
        public virtual DbSet<TipoRetencion> TipoRetencion { get; set; }
        public virtual DbSet<TipoMoneda> TipoMoneda { get; set; }
        public virtual DbSet<TipoCombustible> TipoCombustible { get; set; }
        public virtual DbSet<TipoMedidaCombustible> TipoMedidaCombustible { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<TipoPresentacionMedicamento> TipoPresentacionMedicamento { get; set; }
        public virtual DbSet<TipoMedidas> TipoMedidas { get; set; }
        public virtual DbSet<NovedadIncautacion> NovedadIncautacion { get; set; }
        public virtual DbSet<TipoVehiculo> TipoVehiculo { get; set; }
        public virtual DbSet<TipoApresamiento> TipoApresamiento { get; set; }
        public virtual DbSet<CausaIncautacion> CausaIncautacion { get; set; }
        public virtual DbSet<NovedadContrabando> NovedadContrabando { get; set; }
        public virtual DbSet<TipoContrabando> TipoContrabando { get; set; }
        public virtual DbSet<CausaApresamiento> CausaApresamiento { get; set; }
        public virtual DbSet<TipoIncautacion> TipoIncautacion { get; set; }
        public virtual DbSet<InstitucionProtestante> InstitucionProtestante { get; set; }
        public virtual DbSet<NovedadProtesta> NovedadProtesta { get; set; }
        public virtual DbSet<CategoriaProtesta> CategoriaProtesta { get; set; }
        public virtual DbSet<Perfil> Perfil { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<Pantallas> Pantallas { get; set; }
        public virtual DbSet<Accidentes> Accidentes { get; set; }
        public virtual DbSet<Diagnostico> Diagnostico { get; set; }
        public virtual DbSet<Hospitales> Hospitales { get; set; }
        public virtual DbSet<Enfermedades> Enfermedades { get; set; }
        public virtual DbSet<NovedadHospitalizacion> NovedadHospitalizacion { get; set; }
        public virtual DbSet<NovedadRecorridos> NovedadRecorridos { get; set; }
        public virtual DbSet<NovedadMuertes> NovedadMuertes { get; set; }
        public virtual DbSet<TipoMuertes> TipoMuertes { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual int usp_CreateTipoNovedad(Nullable<int> tipoNovedadID, string nombre, Nullable<int> estatusID, Nullable<int> auditoriaID, string usuarioCreo, Nullable<System.DateTime> fechaCreo, ObjectParameter codigo_estado, ObjectParameter mensaje_estado)
        {
            var tipoNovedadIDParameter = tipoNovedadID.HasValue ?
                new ObjectParameter("TipoNovedadID", tipoNovedadID) :
                new ObjectParameter("TipoNovedadID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estatusIDParameter = estatusID.HasValue ?
                new ObjectParameter("EstatusID", estatusID) :
                new ObjectParameter("EstatusID", typeof(int));
    
            var auditoriaIDParameter = auditoriaID.HasValue ?
                new ObjectParameter("AuditoriaID", auditoriaID) :
                new ObjectParameter("AuditoriaID", typeof(int));
    
            var usuarioCreoParameter = usuarioCreo != null ?
                new ObjectParameter("UsuarioCreo", usuarioCreo) :
                new ObjectParameter("UsuarioCreo", typeof(string));
    
            var fechaCreoParameter = fechaCreo.HasValue ?
                new ObjectParameter("FechaCreo", fechaCreo) :
                new ObjectParameter("FechaCreo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CreateTipoNovedad", tipoNovedadIDParameter, nombreParameter, estatusIDParameter, auditoriaIDParameter, usuarioCreoParameter, fechaCreoParameter, codigo_estado, mensaje_estado);
        }
    
        public virtual int usp_EditTipoNovedad(Nullable<int> tipoNovedadID, string nombre, Nullable<int> estatusID, Nullable<int> auditoriaID, string usuarioActualizo, Nullable<System.DateTime> fechaActualizo, ObjectParameter codigo_estado, ObjectParameter mensaje_estado)
        {
            var tipoNovedadIDParameter = tipoNovedadID.HasValue ?
                new ObjectParameter("TipoNovedadID", tipoNovedadID) :
                new ObjectParameter("TipoNovedadID", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estatusIDParameter = estatusID.HasValue ?
                new ObjectParameter("EstatusID", estatusID) :
                new ObjectParameter("EstatusID", typeof(int));
    
            var auditoriaIDParameter = auditoriaID.HasValue ?
                new ObjectParameter("AuditoriaID", auditoriaID) :
                new ObjectParameter("AuditoriaID", typeof(int));
    
            var usuarioActualizoParameter = usuarioActualizo != null ?
                new ObjectParameter("UsuarioActualizo", usuarioActualizo) :
                new ObjectParameter("UsuarioActualizo", typeof(string));
    
            var fechaActualizoParameter = fechaActualizo.HasValue ?
                new ObjectParameter("FechaActualizo", fechaActualizo) :
                new ObjectParameter("FechaActualizo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditTipoNovedad", tipoNovedadIDParameter, nombreParameter, estatusIDParameter, auditoriaIDParameter, usuarioActualizoParameter, fechaActualizoParameter, codigo_estado, mensaje_estado);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_maxCodAuditoria()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_maxCodAuditoria");
        }
    
        public virtual int usp_decomiso(Nullable<int> option, string usuarioCreo, Nullable<System.DateTime> fechaCreo, string usuarioActualizo, Nullable<System.DateTime> fechaActualizo, string nombre, Nullable<int> estatusID)
        {
            var optionParameter = option.HasValue ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(int));
    
            var usuarioCreoParameter = usuarioCreo != null ?
                new ObjectParameter("UsuarioCreo", usuarioCreo) :
                new ObjectParameter("UsuarioCreo", typeof(string));
    
            var fechaCreoParameter = fechaCreo.HasValue ?
                new ObjectParameter("FechaCreo", fechaCreo) :
                new ObjectParameter("FechaCreo", typeof(System.DateTime));
    
            var usuarioActualizoParameter = usuarioActualizo != null ?
                new ObjectParameter("UsuarioActualizo", usuarioActualizo) :
                new ObjectParameter("UsuarioActualizo", typeof(string));
    
            var fechaActualizoParameter = fechaActualizo.HasValue ?
                new ObjectParameter("FechaActualizo", fechaActualizo) :
                new ObjectParameter("FechaActualizo", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estatusIDParameter = estatusID.HasValue ?
                new ObjectParameter("EstatusID", estatusID) :
                new ObjectParameter("EstatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_decomiso", optionParameter, usuarioCreoParameter, fechaCreoParameter, usuarioActualizoParameter, fechaActualizoParameter, nombreParameter, estatusIDParameter);
        }
    
        public virtual ObjectResult<usp_ReporteNovedades_Result> usp_ReporteNovedades(Nullable<int> tipoNovedadID, Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta)
        {
            var tipoNovedadIDParameter = tipoNovedadID.HasValue ?
                new ObjectParameter("TipoNovedadID", tipoNovedadID) :
                new ObjectParameter("TipoNovedadID", typeof(int));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ReporteNovedades_Result>("usp_ReporteNovedades", tipoNovedadIDParameter, fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual ObjectResult<usp_porcientoNovedades_mesencurso_Result> usp_porcientoNovedades_mesencurso()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_porcientoNovedades_mesencurso_Result>("usp_porcientoNovedades_mesencurso");
        }
    }
}
